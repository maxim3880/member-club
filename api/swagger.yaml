openapi: "3.0.0"
info:
  version: 1.0.0
  title: Member club API
paths:
  /users:
    post: 
      summary: Create user
      description: Create user with data from body
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_user_input'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_user_payload'
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error_model'
    get:
      summary: Get users list
      description: Gets all users by pagination params
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_users_payload'
        '401':
          description: Unauthorized
        '422':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generic_error_model'
components:
  schemas:
    create_user_input:
      $ref: '#/components/schemas/user_input'
    create_user_payload:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/user'
    get_users_payload:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/user'
    generic_error_model:
      type: object
      required:
        - error_message
      properties: 
        error_message: 
          type: string
    user_input:
      type: object
      required:
        - name
        - email
      properties:
        name: 
          type: string
        email:
          type: string
          format: email
    user:
      type: object
      required:
        - name
        - email
        - registration_date
      properties:
        name: 
          type: string
        email:
          type: string
          format: email
        registration_date:
          type: string
          format: date
          
          
      